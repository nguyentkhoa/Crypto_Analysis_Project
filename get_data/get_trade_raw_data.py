import logging
import pandas as pd
import os
import time
from ws_client import BitgetWS
from rest_api import target_list_coin  # ƒê·∫£m b·∫£o bi·∫øn n√†y ƒë∆∞·ª£c ƒë·ªãnh nghƒ©a ƒë√∫ng
from load_to_sql import load_to_db

# --- C·∫•u h√¨nh logging ---
log_dir = r'scripts_get_data\log'
os.makedirs(log_dir, exist_ok=True)

logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s',
    handlers=[
        logging.FileHandler(os.path.join(log_dir, 'trade_loader.log'), encoding='utf-8'),
        logging.StreamHandler()
    ]
)

# --- H√†m l·∫•y d·ªØ li·ªáu trade cho t·ª´ng coin ---
def get_trading_data() -> pd.DataFrame:
    try:
        logging.info(f"üì° ƒêang l·∫•y d·ªØ li·ªáu trade")
        df = BitgetWS(
            inst_type="SPOT",
            channel="trade",
            inst_ids=target_list_coin,
            dur_sec=1.4
        ).run()
        return df
    except Exception as e:
        logging.error(f"‚ùå L·ªói khi l·∫•y d·ªØ li·ªáu trade {e}")
        return pd.DataFrame()

# --- Main ---
def main():
    try:
        df=get_trading_data()
        df_final_trading = df.groupby('instId').head(5)
        if df_final_trading.empty:
            logging.warning("‚ö†Ô∏è Kh√¥ng c√≥ d·ªØ li·ªáu n√†o ƒë∆∞·ª£c l·∫•y t·ª´ b·∫•t k·ª≥ coin n√†o.")
            return pd.DataFrame()
        logging.info(f"‚úÖ ƒê√£ l·∫•y th√†nh c√¥ng d·ªØ li·ªáu t·ªïng c·ªông {len(df_final_trading)} d√≤ng.")

        # Load v√†o DB
        try:
            load_to_db('raw', 'trade_data', df_final_trading)
            logging.info("üéâ Th√†nh c√¥ng load d·ªØ li·ªáu trade v√†o DB.")
        except Exception as e:
            logging.error(f"‚ùå L·ªói khi load d·ªØ li·ªáu v√†o DB: {e}")

    except Exception as e:
        logging.critical(f"üî• L·ªói nghi√™m tr·ªçng trong qu√° tr√¨nh x·ª≠ l√Ω ch√≠nh: {e}")

# --- Entry point ---
if __name__ == "__main__":
    start = time.time()
    main()
    end = time.time()
    print(f"Th·ªùi gian ch·∫°y: {end - start:.2f} gi√¢y")
